---

- name: install required packages
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
  with_flattened:
    - php5
    - "{{ drupal_php_packages }}"
    - drush
  tags:
    - drupal

- name: check pecl modules status
  shell: >
    pecl list {{ item }}
  with_items: drupal_pecl_modules
  register: pecl_list
  changed_when: false
  ignore_errors: true
  tags:
    - drupal
    - pecl

- name: install pecl modules
  shell: >
    pecl install {{ item.item }}
  with_items: pecl_list.results
  when: item.rc != 0
  notify: restart apache2
  tags:
    - drupal
    - pecl

- name: copy pecl ini files to server
  copy:
    src: "{{ item }}.ini"
    dest: "/etc/php5/mods-available/{{ item }}.ini"
  with_items: drupal_pecl_modules
  notify: restart apache2
  tags:
    - drupal
    - pecl

- name: symlink pecl ini files to php apache config
  file:
    src: "/etc/php5/mods-available/{{ item }}.ini"
    dest: "/etc/php5/apache2/conf.d/20-{{ item }}.ini"
    state: link
  with_items: drupal_pecl_modules
  notify: restart apache2
  tags:
    - drupal
    - pecl

- name: drush download drupal
  shell: >
    drush dl drupal --drupal-project-rename=drupal
    chdir=/var/www/html
    creates={{ drupal_path }}
  notify:
    - restart apache2
  tags:
    - drupal

- name: create additional drupal directories
  file:
    path: "{{ drupal_path }}/sites/all/{{ item }}"
    state: directory
  with_items:
    - "modules/contrib"
    - "libraries"
  tags:
    - drupal

- name: download drupal profiles
  git:
    url: "{{ item.url }}"
    dest: "{{ drupal_path }}/profiles/{{ item.name }}"
    accept_hostkey: yes
  with_items: drupal_profiles
  tags:
    - drupal

- name: drush download modules
  shell: >
    drush dl {{ item }}
    chdir={{ drupal_path }}/sites/all/modules/contrib
    creates={{ drupal_path }}/sites/all/modules//contrib/{{ item }}
  with_items: drupal_drush_modules
  tags:
    - drupal

- name: drush download themes
  shell: >
    drush dl {{ item }}
    chdir={{ drupal_path }}/sites/all/themes
    creates={{ drupal_path }}/sites/all/themes/{{ item }}
  with_items: drupal_drush_themes
  tags:
    - drupal

- name: create drush make file
  template:
    src: base.make.j2
    dest: "{{ drupal_path }}/base.make"
    backup: yes
  tags:
    - drupal
    - make

- name: create drupal site directories
  file:
    path: "{{ drupal_path }}/sites/{{ item.code }}/modules"
    state: directory
  with_items: drupal_sites
  tags:
    - drupal

- name: create drupal site sub-directories
  file:
    path: "{{ drupal_path }}/sites/{{ item.0.code }}/{{ item.1 }}"
    state: directory
    mode: "0775"
  with_nested:
    - drupal_sites
    - "[ 'files', 'xmlsitemap' ]"
  tags:
    - drupal

- name: download site required modules
  git:
    url: "{{ item.1.url }}"
    dest: "{{ drupal_path }}/sites/{{ item.0.code }}/modules/{{ item.1.name }}"
    accept_hostkey: yes
  with_subelements:
    - drupal_sites
    - modules
  tags:
    - drupal

- name: add site aliases
  template:
    src: sites.php.j2
    dest: "{{ drupal_path }}/sites/sites.php"
    backup: yes
  notify:
    - restart apache2
  tags:
    - drupal

- name: add site settings
  template:
    src: settings.php.j2
    dest: "{{ drupal_path }}/sites/{{ item.code }}/settings.php"
    backup: yes
  with_items: drupal_sites
  notify:
    - restart apache2
  tags:
    - drupal

- name: check if site install required
  shell: >
    drush status | grep Successful
    chdir={{ drupal_path }}/sites/{{ item.code }}
  with_items: drupal_sites
  register: sites_status
  changed_when: false
  ignore_errors: true
  tags:
    - drupal

- name: install sites
  shell: >
    drush si {{ item.item.profile }} -y --site-name="{{ item.item.name }}" --account-pass={{ item.item.password }}
    chdir={{ drupal_path }}/sites/{{ item.item.code }}
  with_items: sites_status.results
  when: item.rc != 0
  tags:
    - drupal

- name: re/set web directory permissions
  file:
    path: /var/www
    owner: www-data
    group: www-data
    state: directory
    recurse: yes
  tags:
   - drupal

- name: create site virtual hosts
  template:
    src: site.conf.j2
    dest: "/etc/apache2/sites-available/{{ item.code }}.conf"
  with_items: drupal_sites
  when: drupal_configure_vhosts
  notify:
    - restart apache2
  tags:
    - drupal

- name: enable site virtual hosts
  file:
    src: "/etc/apache2/sites-available/{{ item.code }}.conf"
    dest: "/etc/apache2/sites-enabled/{{ item.code }}.conf"
    state: link
  with_items: drupal_sites
  when: drupal_configure_vhosts
  notify:
    - restart apache2
  tags:
    - drupal
